import pandas as pd
import argparse

#load
columns = [
'Query Id',
'Query Name',
'Date',
'Domain',	
'Sentiment',
'Page Type',
'Language',
'Country Code',
'Continent Code',
'Continent',
'Country',	
'State Code',
'County Code',
'City Code',
'Notes',
'Account Type',
'Date',
'Assignment',
'Author City',
'Author City Code',
'Author Continent',
'Author Continent Code',
'Author Country',
'Author Country Code',
'Author County',
'Author County Code',
'Author Location',	
'Author State',
'Author State Code',
'Avatar',
'Average Pages per Visitor',
'Average Visits per Visitor',
'Backlinks',
'Blog Comments',
'Category Details',
'Checked',	
'City',
'County',
'Display URLs',
'Engagement Score',
'Facebook Comments',
'Facebook Likes',
'Facebook Role',
'Facebook Shares',
'Facebook Subtype',
'Forum Posts',
'Forum Views',
'Gender',
'Impact',
'Impressions',
'Instagram Comments',
'Instagram Followers',
'Instagram Following',
'Instagram Interactions Count',
'Instagram Likes',
'Instagram Posts',
'Interest',
'Kred Influence',
'Kred Outreach',
'Last Assignment Date',
'Latitude',
'Location Name',
'Longitude',
'Media Filter',
'Media URLs',
'Minutes per Visitor',
'Percentage Female',
'Percentage Male',
'Priority',
'Professions',
'Twitter Reach',
'Resource Id',
'Short URLs',
'Starred', 
'State',
'Status',
'Subtype', 
'Tags',
'Thread Created Date',
'Thread Entry Type',
'Thread Id',
'Thread URL',
'Total Monthly Visitors',
'Tracked Link Clicks',
'Tracked Links',
'Twitter Channel Role',
'Twitter Followers',
'Twitter Following',
'Twitter Reply Count',
'Twitter Reply to',
'Twitter Retweets',
'Twitter Tweets',
'Twitter Verified',
'Date',
'Word Count',
'mozRank Score',
'Reach (new)',
'Agropecuária',
'Ciência e Tecnologia - Ciência e Tecnologia',
'Comunicação - Comunicação',
'Congresso - Congresso',
'Corrupção - Corrupção',
'Direitos Humanos - Direitos Humanos',
'Economia - Economia',
'Educação - Educação',
'Holocausto - Holocausto',
'Institucional - Institucional',
'Justiça - Justiça',
'Limpeza - Limpeza',
'Meio Ambiente - Meio Ambiente',
'Mídia de Origem - Instagram',
'Mídia de Origem - Reddit',
'Mídia de Origem - Twitter',
'Mídia de Origem - Yahoo Answers',
'Programas Sociais - Desenvolvimento Social',
'Região do Brasil - Centro-oeste',
'Região do Brasil - Nordeste',
'Região do Brasil - Norte',
'Região do Brasil - Sudeste',
'Região do Brasil - Sul',
'Relações exteriores - Relações exteriores',
'Saúde - Saúde',
'Segurança - Segurança',
'Transparência - Transparência',
'[Wizard-1] Content Types - Images',
'[Wizard-1] Content Types - Videos',
'[Wizard-2] Content Types - Images',
'[Wizard-2] Content Types - Videos'
]

parser = argparse.ArgumentParser()
parser.add_argument('-seq', type=str)
args = parser.parse_args()

size=180000
number = 1
# 'Infraestrutura e desenvolvimento - Infraestrutura', não achou!
for chunk in pd.read_csv(f"/home/wesinalves/Downloads/SECOM 2019_{args.seq}.csv", delimiter=",", chunksize=size, skiprows=5, usecols=columns, low_memory=False):
    chunk.to_csv(f'secom2019_{args.seq}/secom2019_{args.seq}_' + str(number) + '.csv')
    print(number)
    number += 1    
    

# print(dataset.columns)
# print(dataset.head(5))

#break in pieces


